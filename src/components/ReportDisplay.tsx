import React from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { CreditReport } from '@/pages/Index';
import { Download, Calendar, Building } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface ReportDisplayProps {
  report: CreditReport;
}

export const ReportDisplay: React.FC<ReportDisplayProps> = ({ report }) => {
  // Defensive check and debug log
  console.log('ReportDisplay received:', report);
  if (!report || !report.companyName) {
    return <div>No report data available.</div>;
  }

  // TEMP: Show raw report for debugging
  // return <pre>{JSON.stringify(report, null, 2)}</pre>;

  const { toast } = useToast();

  const handleDownload = () => {
    const reportContent = `
# Credit Analysis Report: ${report.companyName}

**Generated on:** ${new Date(report.generatedAt).toLocaleDateString()}

## Company Overview
${report.overview}

## Financial Highlights
${report.financialHighlights}

## Key Risks
${report.keyRisks}

## Management Commentary
${report.managementCommentary}

---
*Generated by CreditAI Analyzer*
    `.trim();

    const blob = new Blob([reportContent], { type: 'text/markdown' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${report.companyName.replace(/[^a-z0-9]/gi, '_')}_credit_report.md`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Report downloaded",
      description: "Your credit analysis report has been saved.",
    });
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const sections = [
    {
      title: 'Company Overview',
      content: report.overview,
      icon: Building,
      color: 'blue'
    },
    {
      title: 'Financial Highlights',
      content: report.financialHighlights,
      icon: Building,
      color: 'green'
    },
    {
      title: 'Key Risks',
      content: report.keyRisks,
      icon: Building,
      color: 'red'
    },
    {
      title: 'Management Commentary',
      content: report.managementCommentary,
      icon: Building,
      color: 'purple'
    }
  ];

  return (
    <div className="space-y-6">
      {/* Report Header */}
      <Card className="p-6 bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200">
        <div className="flex items-center justify-between">
          <div className="space-y-2">
            <div className="flex items-center space-x-3">
              <Building className="h-6 w-6 text-blue-600" />
              <h1 className="text-2xl font-bold text-slate-900">{report.companyName}</h1>
            </div>
            <div className="flex items-center space-x-4 text-sm text-slate-600">
              <div className="flex items-center space-x-1">
                <Calendar className="h-4 w-4" />
                <span>{formatDate(report.generatedAt)}</span>
              </div>
              <Badge variant="secondary" className="bg-green-100 text-green-800">
                AI Generated
              </Badge>
            </div>
          </div>
          
          <Button onClick={handleDownload} className="bg-blue-600 hover:bg-blue-700">
            <Download className="mr-2 h-4 w-4" />
            Download Report
          </Button>
        </div>
      </Card>

      {/* Report Sections */}
      <div className="grid gap-6">
        {sections.map((section, index) => (
          <Card key={index} className="p-6 hover:shadow-lg transition-shadow">
            <div className="space-y-4">
              <div className="flex items-center space-x-3">
                <div className={`p-2 rounded-lg ${
                  section.color === 'blue' ? 'bg-blue-100' :
                  section.color === 'green' ? 'bg-green-100' :
                  section.color === 'red' ? 'bg-red-100' : 'bg-purple-100'
                }`}>
                  <section.icon className={`h-5 w-5 ${
                    section.color === 'blue' ? 'text-blue-600' :
                    section.color === 'green' ? 'text-green-600' :
                    section.color === 'red' ? 'text-red-600' : 'text-purple-600'
                  }`} />
                </div>
                <h2 className="text-xl font-semibold text-slate-900">{section.title}</h2>
              </div>
              
              <div className="prose max-w-none">
                <div className="text-slate-700 whitespace-pre-line leading-relaxed">
                  {section.content}
                </div>
              </div>
            </div>
          </Card>
        ))}
      </div>

      {/* Report Footer */}
      <Card className="p-4 bg-slate-50 border-slate-200">
        <p className="text-sm text-slate-600 text-center">
          This report was generated using AI analysis. Please verify all information and use as supplementary material for decision-making.
        </p>
      </Card>
    </div>
  );
};
